---
# file: roles/ansible_container/tasks/setup-ansible.yml

- name: Get python version
  ansible.builtin.script: get-python-version
  register: python_version

- name: Show Python version string
  ansible.builtin.debug:
    var: python_version

- name: Extract python major version
  ansible.builtin.set_fact:
    python_major_version: "{{ python_version.stdout.split('.')[0] }}"

- name: Extract python minor version
  ansible.builtin.set_fact:
    python_minor_version: "{{ python_version.stdout.split('.')[1] }}"

- name: "Upgrade pip and ansible requierements for old python 2.7 or < 3.5"
  when:
    python_major_version | int == 2
    or (python_major_version | int == 3
    and python_minor_version | int < 5)
  block:
    - name: "Python2: Upgrade pip to version < 21.0.0"
      become: "{{ ansible_container_become }}"
      ansible.builtin.pip:
        name:
          - 'pip<21.0.0'
        state: latest

    - name: "Python2: Install ansible requirements"
      become: "{{ ansible_container_become }}"
      ansible.builtin.pip:
        name:
          - 'setuptools<45.0.0'
          - markupsafe
          - paramiko
        state: latest

- name: "Upgrade pip and ansible requierements for python >= 3.5"
  when:
    - python_major_version|int == 3
    - python_minor_version|int >= 5
  block:
    - name: "Python3: Upgrade pip to the latest version "
      become: "{{ ansible_container_become }}"
      ansible.builtin.pip:
        name:
          - pip
        state: latest

    - name: "Python3: Install ansible requirements"
      become: "{{ ansible_container_become }}"
      ansible.builtin.pip:
        name:
          - 'cryptography<3.4'
          - markupsafe
          - paramiko
        state: latest

- name: Install Ansible via Pip
  become: "{{ ansible_container_become }}"
  ansible.builtin.pip:
    name: ansible
    state: "{{ ansible_container_package_state }}"
  environment:
    LC_ALL: "C.UTF-8"
