---
# file: roles/ansible_container/tasks/install-via--pip.yml

- name: Ensure the crb repository is enabled
  become: "{{ ansible_container_become }}"
  community.general.dnf_config_manager:
    name: crb
    state: enabled
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version | int == 9

- name: "Install pip requirements."
  become: "{{ ansible_container_become }}"
  ansible.builtin.package:
    name: "{{ ansible_container_pip_requirements }}"
    state: "{{ ansible_container_package_state }}"

- name: Install pip build dependencies
  become: "{{ ansible_container_become }}"
  ansible.builtin.command: >
    apk --update add --virtual build-dependencies
    {{ ansible_container_pip_build_dependencies | join(' ') }}
  register: apk_dep_output
  changed_when: apk_dep_output.rc == 0
  failed_when: apk_dep_output.rc != 0
  when:
    - ansible_distribution == "Alpine"
    - ansible_distribution_version < "3.16"
  notify:
    - Cleanup apk_build_dependencies

- name: "Upgrade pip, wheel and setuptools."
  become: "{{ ansible_container_become }}"
  remote_user: "{{ ansible_container_user }}"
  ansible.builtin.pip:
    name:
      - pip
      - wheel
      - setuptools
    state: "{{ ansible_container_package_state }}"
    virtualenv: ~/.local
    virtualenv_site_packages: true
  environment:
    LC_ALL: "C.UTF-8"
  when:
    ((ansible_os_family == "RedHat") and
    (ansible_distribution_major_version | int == 7)) or
    ((ansible_distribution == "Alpine") and
    (ansible_distribution_version < "3.16"))

- name: "Install Ansible via pip."
  become: "{{ ansible_container_become }}"
  remote_user: "{{ ansible_container_user }}"
  ansible.builtin.pip:
    name: ansible
    state: "{{ ansible_container_package_state }}"
    virtualenv: ~/.local
    virtualenv_site_packages: true
  environment:
    LC_ALL: "C.UTF-8"
