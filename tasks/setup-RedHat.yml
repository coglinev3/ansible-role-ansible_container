---
# file: roles/ansible_container/tasks/setup-RedHat.yml

- name: "RHEL: Install EPEL Repository"
  become: "{{ ansible_container_become }}"
  ansible.builtin.yum:
    name: epel-release
    state: present
    update_cache: true
  when:
    - not ansible_distribution == "Fedora"
    - not ansible_distribution == "Amazon"
  tags:
    - install

- name: "RedHat: Update all packages to the latest version."
  become: "{{ ansible_container_become }}"
  ansible.builtin.yum:
    name: '*'
    update_cache: true
    state: latest # noqa package-latest
  when: ansible_container_upgrade_packages
  notify: remove yum_cache

- name: "RedHat: Install requirements."
  become: "{{ ansible_container_become }}"
  ansible.builtin.yum:
    name: "{{ ansible_container_requirements }}"
    state: "{{ ansible_container_package_state }}"
  notify: remove yum_cache

- name: "RedHat: Prepare systemd."
  when: ansible_distribution_major_version > "6"
  block:
    - name: Delete unit files which might cause issues 1/2
      become: "{{ ansible_container_become }}"
      ansible.builtin.shell: >-
        for i in *;
        do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i;
        done
      args:
        executable: /bin/bash
        chdir: /lib/systemd/system/sysinit.target.wants
      register: result
      changed_when: result.rc != 0
      failed_when: result.rc != 0

    - name: Delete unit files which might cause issues 2/2
      become: "{{ ansible_container_become }}"
      ansible.builtin.command: "rm -f {{ item }}"
      register: result
      changed_when: result.rc != 0
      failed_when: result.rc != 0
      with_items:
        - "/lib/systemd/system/multi-user.target.wants/*"
        - "/etc/systemd/system/*.wants/*"
        - "/lib/systemd/system/local-fs.target.wants/*"
        - "/lib/systemd/system/sockets.target.wants/*udev*"
        - "/lib/systemd/system/sockets.target.wants/*initctl*"
        - "/lib/systemd/system/basic.target.wants/*"
        - "/lib/systemd/system/anaconda.target.wants/*"

- name: "RedHat: Check for /lib/systemd/system directory."
  ansible.builtin.stat:
    path: /lib/systemd/system
  register: systemd_dir

# Remove unnecessary getty and udev targets that result in high CPU usage when
# using multiple containers with Molecule
# (https://github.com/ansible/molecule/issues/1104)
- name: "RedHat: Remove unnecessary getty and udev targets."
  become: "{{ ansible_container_become }}"
  ansible.builtin.command: "rm -f {{ item }}"
  register: result
  changed_when: result.rc != 0
  failed_when: result.rc != 0
  with_items:
    - "/lib/systemd/system/systemd*udev*"
    - "/lib/systemd/system/getty.target"
  when: systemd_dir.stat.isdir is defined and systemd_dir.stat.isdir

- name: "RedHat: Check for /etc/rc.d/rc.sysinit."
  ansible.builtin.stat:
    path: /etc/rc.d/rc.sysinit
  register: sysinit_file

- name: "RedHat: Remove unnecessary getty and udev services that can result in high CPU usage."
  when: sysinit_file.stat.isreg is defined and sysinit_file.stat.isreg
  block:
    # Remove unnecessary getty and udev services that can result in high CPU
    # usage when using multiple containers with Molecule
    # (https://github.com/ansible/molecule/issues/1104)
    - name: "RedHat: Comment out start_udev."
      ansible.builtin.lineinfile:
        path: /etc/rc.d/rc.sysinit
        regexp: '^(.*)start_udev'
        line: '#\1start_udev'
        backrefs: "yes"
        backup: "yes"
        owner: root
        group: root
        mode: 0755

    - name: "RedHat: Remove unnecessary tty's."
      become: "{{ ansible_container_become }}"
      ansible.builtin.file:
        path: /etc/init/tty.conf
        state: absent
